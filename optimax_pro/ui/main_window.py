"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ Optimax Pro —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Ç–µ–º–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
"""

import sys
import os
import logging
import subprocess
import time
import psutil
import wmi
import threading
import socket
import glob
import hashlib
from datetime import datetime

from PyQt6.QtWidgets import (
    QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QPushButton, QLabel, QProgressBar, QFrame, QStackedWidget,
    QSlider, QGraphicsDropShadowEffect, QScrollArea, QGridLayout,
    QCheckBox, QMessageBox, QComboBox, QLineEdit, QFileDialog, QTextEdit,
    QTabWidget, QDialog, QDialogButtonBox, QTableWidget, QTableWidgetItem
)
from PyQt6.QtCore import Qt, QTimer, QPropertyAnimation, QEasingCurve, QThread, pyqtSignal, QSize
from PyQt6.QtGui import QColor, QPainter, QPen, QIcon, QFont

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
from ui.widgets import CustomSlider, CircularProgress, ModernButton, TweakCard
from ui.threads import StressTestThread, AIAnalysisThread, OptimizationThread
from tweaks import registry_tweaks, security_tweaks, cleanup_tweaks, performance_tweaks, network_tweaks, optimization_tweaks

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    filename='optimax_log.txt', 
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

class OptimaxPro(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("OPTIMAX PRO")
        self.setGeometry(100, 100, 1200, 800)
        self.setMinimumSize(1000, 700)

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.is_dark_theme = True
        self.current_profile = "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π"
        self.monitor_data = {"cpu": [], "ram": [], "disk": [], "time": []}
        self.monitor_time = 60

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        self.init_ui()
        self.apply_dark_theme()

        # –¢–∞–π–º–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        self.monitor_timer = QTimer()
        self.monitor_timer.timeout.connect(self.update_monitoring)
        self.monitor_timer.start(1000)

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)

        # –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞
        self.main_layout = QHBoxLayout(self.central_widget)
        self.main_layout.setContentsMargins(0, 0, 0, 0)
        self.main_layout.setSpacing(0)

        # –°–æ–∑–¥–∞–µ–º —Å–∞–π–¥–±–∞—Ä
        self.create_sidebar()

        # –°–æ–∑–¥–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.create_content_area()

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É
        self.main_layout.addWidget(self.sidebar)
        self.main_layout.addWidget(self.content_stack)

    def create_sidebar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        self.sidebar = QFrame()
        self.sidebar.setObjectName("sidebar")
        self.sidebar.setFixedWidth(250)

        layout = QVBoxLayout(self.sidebar)
        layout.setContentsMargins(20, 30, 20, 30)
        layout.setSpacing(8)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_layout = QHBoxLayout()
        optimax_label = QLabel("OPTIMAX")
        optimax_label.setObjectName("title_optimax")
        pro_label = QLabel("OPTIMAX PRO")
        pro_label.setObjectName("title_pro")

        title_layout.addWidget(optimax_label)
        title_layout.addWidget(pro_label)
        title_layout.addStretch()

        layout.addLayout(title_layout)
        layout.addSpacing(20)

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.nav_buttons = []
        nav_items = [
            ("üìä", "Monitoring", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ —Å–∏—Å—Ç–µ–º—ã"),
            ("‚öôÔ∏è", "Optimization", "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"),
            ("üßπ", "Cleanup", "–û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã"),
            ("‚ö°", "Autostart", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–æ–π"),
            ("ü§ñ", "AI Analysis", "AI –∞–Ω–∞–ª–∏–∑ —Å–∏—Å—Ç–µ–º—ã"),
            ("üë§", "Profiles", "–ü—Ä–æ—Ñ–∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"),
            ("‚è∞", "Scheduler", "–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á"),
            ("‚ùì", "Help", "–°–ø—Ä–∞–≤–∫–∞ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"),
            ("‚öôÔ∏è", "Settings", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        ]

        for icon, text, tooltip in nav_items:
            btn = ModernButton(icon, text, tooltip)
            btn.clicked.connect(lambda checked, idx=len(self.nav_buttons): self.switch_page(idx))
            self.nav_buttons.append(btn)
            layout.addWidget(btn)

        layout.addStretch()

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É
        if self.nav_buttons:
            self.nav_buttons[0].setActive(True)

    def create_content_area(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        self.content_stack = QStackedWidget()
        self.content_stack.setObjectName("content_stack")

        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.monitoring_page = self.create_monitoring_page()
        self.optimize_page = self.create_optimize_page()
        self.cleanup_page = self.create_cleanup_page()
        self.autostart_page = self.create_autostart_page()
        self.ai_page = self.create_ai_page()
        self.profiles_page = self.create_profiles_page()
        self.scheduler_page = self.create_scheduler_page()
        self.help_page = self.create_help_page()
        self.settings_page = self.create_settings_page()

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.content_stack.addWidget(self.monitoring_page)
        self.content_stack.addWidget(self.optimize_page)
        self.content_stack.addWidget(self.cleanup_page)
        self.content_stack.addWidget(self.autostart_page)
        self.content_stack.addWidget(self.ai_page)
        self.content_stack.addWidget(self.profiles_page)
        self.content_stack.addWidget(self.scheduler_page)
        self.content_stack.addWidget(self.help_page)
        self.content_stack.addWidget(self.settings_page)

    def create_monitoring_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        page = QWidget()
        page.setObjectName("monitoring_page")
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)
        layout.setSpacing(30)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        title.setObjectName("page_title")
        layout.addWidget(title)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–µ—Å—É—Ä—Å–æ–≤
        resources_frame = QFrame()
        resources_frame.setObjectName("resources_frame")
        resources_layout = QHBoxLayout(resources_frame)
        resources_layout.setSpacing(40)

        self.cpu_circle = CircularProgress("CPU", 32)
        self.ram_circle = CircularProgress("RAM", 57) 
        self.disk_circle = CircularProgress("Disk", 21)

        resources_layout.addWidget(self.cpu_circle)
        resources_layout.addWidget(self.ram_circle)
        resources_layout.addWidget(self.disk_circle)

        layout.addWidget(resources_frame)

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_frame = QFrame()
        info_frame.setObjectName("info_frame")
        info_layout = QVBoxLayout(info_frame)

        self.temp_label = QLabel("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU: –ù/–î")
        self.load_label = QLabel("–ù–∞–≥—Ä—É–∑–∫–∞ –ø–æ —è–¥—Ä–∞–º: –ù/–î")
        self.net_speed_label = QLabel("–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: –ù/–î")

        info_layout.addWidget(self.temp_label)
        info_layout.addWidget(self.load_label)
        info_layout.addWidget(self.net_speed_label)

        layout.addWidget(info_frame)
        layout.addStretch()

        return page

    def create_optimize_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
        page = QWidget()
        page.setObjectName("optimize_page")
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)
        layout.setSpacing(30)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è")
        title.setObjectName("page_title")
        layout.addWidget(title)

        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.optimize_progress = QProgressBar()
        self.optimize_progress.setObjectName("progress_bar")
        self.optimize_progress.setTextVisible(True)
        layout.addWidget(self.optimize_progress)

        # –ö–Ω–æ–ø–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        optimize_btn = ModernButton("‚ö°", "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–≤–∏–∫–∏", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é")
        optimize_btn.clicked.connect(self.start_optimization)
        layout.addWidget(optimize_btn)

        # –û–±–ª–∞—Å—Ç—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —Ç–≤–∏–∫–æ–≤
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setObjectName("tweaks_scroll")

        scroll_content = QWidget()
        self.tweaks_layout = QVBoxLayout(scroll_content)

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–≤–∏–∫–æ–≤
        self.create_tweak_cards()

        scroll.setWidget(scroll_content)
        layout.addWidget(scroll)

        return page

    def create_tweak_cards(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–≤–∏–∫–æ–≤"""
        categories = {
            "Registry": ("üìù", registry_tweaks[:10]),
            "Security": ("üîê", security_tweaks[:10]),
            "Performance": ("‚ö°", performance_tweaks[:10]),
            "Network": ("üåê", network_tweaks[:10])
        }

        self.tweak_cards = []

        for category_name, (icon, tweaks) in categories.items():
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            category_header = QLabel(f"{icon} {category_name}")
            category_header.setObjectName("category_header")
            self.tweaks_layout.addWidget(category_header)

            # –ö–∞—Ä—Ç–æ—á–∫–∏ —Ç–≤–∏–∫–æ–≤
            for tweak in tweaks:
                card = TweakCard(tweak)
                self.tweak_cards.append(card)
                self.tweaks_layout.addWidget(card)

            self.tweaks_layout.addSpacing(20)

    def create_cleanup_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—á–∏—Å—Ç–∫–∏"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("–û—á–∏—Å—Ç–∫–∞")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def create_autostart_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("Autostart")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def create_ai_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã AI –∞–Ω–∞–ª–∏–∑–∞"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("AI Analysis")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def create_profiles_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ—Ñ–∏–ª–µ–π"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("Profiles")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def create_scheduler_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("Scheduler")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def create_help_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø—Ä–∞–≤–∫–∏"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("Help")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def create_settings_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        page = QWidget()
        layout = QVBoxLayout(page)
        layout.setContentsMargins(40, 40, 40, 40)

        title = QLabel("Settings")
        title.setObjectName("page_title")
        layout.addWidget(title)

        layout.addStretch()
        return page

    def switch_page(self, index):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü"""
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        for btn in self.nav_buttons:
            btn.setActive(False)

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É
        if 0 <= index < len(self.nav_buttons):
            self.nav_buttons[index].setActive(True)

        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        self.content_stack.setCurrentIndex(index)

    def update_monitoring(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        try:
            cpu = psutil.cpu_percent()
            ram = psutil.virtual_memory().percent
            disk = psutil.disk_usage("C:").percent

            self.cpu_circle.setValue(cpu)
            self.ram_circle.setValue(ram)
            self.disk_circle.setValue(disk)

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")

    def start_optimization(self):
        """–ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
        selected_tweaks = [card for card in self.tweak_cards if card.is_enabled()]

        if not selected_tweaks:
            QMessageBox.information(self, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–≤–∏–∫–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è")
            return

        self.optimization_thread = OptimizationThread(selected_tweaks)
        self.optimization_thread.progress.connect(self.optimize_progress.setValue)
        self.optimization_thread.finished.connect(self.optimization_finished)
        self.optimization_thread.start()

    def optimization_finished(self):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
        QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        self.optimize_progress.setValue(0)

    def apply_dark_theme(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã"""
        style = """
        /* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ */
        QMainWindow {
            background-color: #1E1E1E;
            color: #E0E0E0;
        }

        /* –°–∞–π–¥–±–∞—Ä */
        QFrame#sidebar {
            background-color: #252525;
            border-right: 1px solid #404040;
        }

        /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
        QLabel#title_optimax {
            color: #E0E0E0;
            font-size: 16px;
            font-weight: bold;
        }

        QLabel#title_pro {
            color: #4A90E2;
            font-size: 16px;
            font-weight: bold;
        }

        QLabel#page_title {
            color: #E0E0E0;
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        QLabel#category_header {
            color: #4A90E2;
            font-size: 18px;
            font-weight: bold;
            margin: 20px 0 10px 0;
        }

        /* –û–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
        QStackedWidget#content_stack {
            background-color: #1E1E1E;
        }

        /* –§—Ä–µ–π–º—ã */
        QFrame#resources_frame {
            background-color: #2D2D2D;
            border-radius: 15px;
            padding: 30px;
            border: 1px solid #404040;
        }

        QFrame#info_frame {
            background-color: #2D2D2D;
            border-radius: 15px;
            padding: 20px;
            border: 1px solid #404040;
        }

        /* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */
        QProgressBar#progress_bar {
            background-color: #404040;
            border-radius: 8px;
            text-align: center;
            color: #E0E0E0;
            font-weight: bold;
            height: 30px;
        }

        QProgressBar#progress_bar::chunk {
            background-color: #4A90E2;
            border-radius: 8px;
        }

        /* –°–∫—Ä–æ–ª–ª */
        QScrollArea#tweaks_scroll {
            background-color: transparent;
            border: none;
        }

        QScrollBar:vertical {
            background: #404040;
            width: 12px;
            border-radius: 6px;
        }

        QScrollBar::handle:vertical {
            background: #606060;
            min-height: 20px;
            border-radius: 6px;
        }

        QScrollBar::handle:vertical:hover {
            background: #707070;
        }
        """

        self.setStyleSheet(style)
